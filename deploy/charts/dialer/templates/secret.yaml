
{{- if .Values.ingress.enabled -}}

{{- $kubedialerName        :=  printf "kubedialer-%s" .Release.Name -}}
{{- $kubedialerServiceName :=  printf "%s.%s"  $kubedialerName  .Release.Namespace -}}
{{- $kubedialerServiceFQDN :=  printf "%s.svc.cluster.local"  $kubedialerServiceName  -}}
{{- $kubedialerIngressFQDN :=  .Values.dialerHostname -}}

{{- $altNames := concat (list "localhost"  "kubedialer" $kubedialerName  $kubedialerServiceName $kubedialerServiceFQDN $kubedialerIngressFQDN) .Values.ingress.tls.selfSigned.alternativeNames -}}
{{- $ca := genCA "kruz-kubedialer-ca" 365 -}}
{{- $cert := genSignedCert $kubedialerName (list "127.0.0.1") $altNames 3650 $ca -}}

{{- $caPem   :=  $ca.Cert   | b64enc -}}
{{- $certPem :=  $cert.Cert | b64enc -}}
{{- $keyPem  :=  $cert.Key  | b64enc -}}

{{- if or .Release.IsInstall (eq .Values.ingress.tls.mode "external") }}
---
# Generate the self-signed secrets once on install 
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.certsSecretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubedialer-{{ .Release.Name }}
type: Opaque 
data:
{{- if eq .Values.ingress.tls.mode "self-signed" }}
  ca.pem: {{ $caPem }}
  cert.pem: {{ $certPem }}
  key.pem: {{ $keyPem }}
  tls.crt: {{ $certPem }}
  tls.key: {{ $keyPem }}
{{- else }}
{{ (.Files.Glob "certs/*").AsSecrets | indent 2 }}  
  tls.crt: {{ .Files.Get "certs/cert.pem" | b64enc  }}
  tls.key: {{ .Files.Get "certs/key.pem" | b64enc   }}
{{- end }}

{{- end }}

{{- end -}}